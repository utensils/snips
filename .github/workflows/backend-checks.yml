name: Backend Checks

on:
  push:
    paths:
      - 'src-tauri/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/backend-checks.yml'
  pull_request:
    paths:
      - 'src-tauri/**'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - '.github/workflows/backend-checks.yml'

jobs:
  backend-checks:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Check formatting
        run: cargo fmt --manifest-path=src-tauri/Cargo.toml -- --check

      - name: Run clippy
        run: cargo clippy --manifest-path=src-tauri/Cargo.toml -- -D warnings

      - name: Run tests
        run: cargo test --manifest-path=src-tauri/Cargo.toml --lib --tests

  window-focus-stress:
    needs: backend-checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        backend: [x11, wayland]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-focus-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-focus-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-focus-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-focus-cargo-git-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-focus-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-focus-cargo-build-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            weston \
            xvfb \
            jq \
            python3-minimal \
            glib2.0-bin

      - name: Build Snips binary
        run: cargo build --manifest-path=src-tauri/Cargo.toml --bin snips

      - name: Run window focus stress (${{ matrix.backend }})
        env:
          BACKEND: ${{ matrix.backend }}
        run: |
          scripts/window-focus-ci.sh --backend "${BACKEND}" --iterations 12 --delay 0.3

      - name: Upload focus logs (${{ matrix.backend }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: focus-${{ matrix.backend }}-logs
          path: focus-logs
          if-no-files-found: warn

  wayland-tests:
    needs: backend-checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.90.0
          components: rustfmt, clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-wayland-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-wayland-cargo-registry-

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-wayland-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-wayland-cargo-git-

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-wayland-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-wayland-cargo-build-

      - name: Install Wayland test dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev \
            build-essential \
            curl \
            wget \
            file \
            libxdo-dev \
            libssl-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            weston \
            glib2.0-bin

      - name: Run headless Wayland unit tests
        run: |
          dbus-run-session -- bash <<'EOS'
          set -euo pipefail

          export XDG_RUNTIME_DIR="$(mktemp -d)"
          chmod 700 "${XDG_RUNTIME_DIR}"
          export WAYLAND_DISPLAY="wayland-ci"

          weston --backend=headless --socket="${WAYLAND_DISPLAY}" --idle-time=0 > wayland-weston.log 2>&1 &
          WESTON_PID=$!
          trap 'kill ${WESTON_PID} 2>/dev/null || true; rm -rf "${XDG_RUNTIME_DIR}"' EXIT

          sleep 2

          export SNIPS_METRICS=1

          cargo test --manifest-path=src-tauri/Cargo.toml --test window_focus_e2e -- --nocapture
          cargo test --manifest-path=src-tauri/Cargo.toml --test dbus_smoke -- --nocapture
          EOS

      - name: Upload Wayland logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: wayland-headless-logs
          path: wayland-weston.log
          if-no-files-found: warn
